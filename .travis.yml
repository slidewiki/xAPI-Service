language: node_js
node_js: 6
sudo: required
git:
  depth: 5
branches:
  only:
  - "/^(?i:SWIK)-.*$/"
  - master
cache:
  directories:
  - "./application/node_modules"
before_install:
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/install_compose.sh ; fi
- cd application
script:
- npm run lint
#- npm run test:unit
#- npm run test:integration
after_success:
- cd ..
- openssl aes-256-cbc -K $encrypted_0429ea0e0463_key -iv $encrypted_0429ea0e0463_iv -in deployment_keys.tar.enc -out deployment_keys.tar -d
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/dockerhub.sh ; fi
- if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" = "false" ] ; then ./travis_scripts/deploy.sh ; fi
- cd application
after_script:
- npm run coverall
- rm -f deployment_keys.tar
- rm -f ~/.docker/{cert.pem,key.pem,ca.pem,config.json}
services:
- docker
notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure: iOsxkpiFqE0ijS+VvFLV3vypOzPeA7H+pD8K2bKNDJD6qKL+trgJoqKwJ4JLjEEDF/HDLtmrXMlTBAUMeit+erXuJqBmWS2Za1Co8ofySSXS2pWKra1MDLZq3NVU1uZjpT6cpSgZdA1mZccd7ZqNsJwFuhPALGtFIYSPCRsZddYzGOCWNuizQfmu6Kod0prUCNou9yhjDVKYxVCc1S+LMhQzkKTCWXddP0YVSs/PTnwXh2S9OPKEUMAmdp07xC22rqK7y8NMAM/bIcOeG+Zbp9tnhGPV0f/UQRhXQ90kxsd5LpbzEyJlALQmrXJyqfvdiWqL218ON0aNHf38+iq2Hno5JyLnfkqHcO5r0f2cHGTexLrelssEmDo6dIK9xy0v2OVLU3Bjl/+eFnoZqn8/QvPelVCqVxPJLGvI6AKjUd6AdaCkGVcvF/kOLsEQKt8WJTtzSaPWt4G4dBILK0UwVlL9a2KPJNOn0MqzDvYB6are8IPVm9PCR7yDWNQwe+jYnfCIta2/J4TO6EE6inVOJZ7ljO+shaKP/IoVkbyxfbhuF60xvAirxRjMs8LyuWzaa20nbZjnFl1oqb/b9dNy5gZSpjL8jPhRrLqjNc26AwTncyQT6nZ7nqiTd4OpNDOER/4P/dtVg7VhMC97gL5mqaAZNaqk/XdBYHFwzgKdk8s=
env:
  global:
  - DOCKER_COMPOSE_VERSION=1.6.2
  - DATABASE_PORT=27018
  - secure: LPWDR3jQw4OSvL5anO10iF7IQ3iYnQsjxvcjplDNX6FPQjNNLLPcbX9YYtvzJuCeM0k9X6/VCkVvKyIdZxbdJTXgKDokCwTNpgQA/o2tfuxdlg5hKMRDbCvL37MZTPfBof36tZlZWF24WsOEQyYqGN2jk93mfKchL9qxIqDSJibx8uKPs0N09xKGggm8pGnHTF5hKRIuUntxeYY4aYNcGQl7D7g1V+C+TbhsIurUwf3yZtmz8gH92o99fRyZjgZhN4HGKfsAnY5jur/L00tf+7dYkX0YOxsP989yr/v+PvKx+A0C+sxxsZz+6VM0OP3YVYzQAuf+ieFiyxsAepdlqKeJKdrorxb/7G8489x7DwkeBC+OFrZTG3CAggexTohnlFetpJEYtVhVFMnM0hiODbimPwIa8G/xb1GJQJjqp1NP0ISr9CtivhRCsdDJ17LQ5O1oWd088qbwh5lLslD0jMG0QX8IvGItkAuzDVhqy7yfYEV1vwEwlfWH/HrHVQyWSFCQYV8tLvodzEnUwNSMYDk84Q5yNjfbRsyDKqdLKHaWWsJjMn6HYCKwqwKhH+LXyAQYKc4KjMInG+b9X67eT6IS2oWqkQdphC59eD7jvNWBhH+7ONBhNZ+yGKLJUr3oYPGy4dr2fkx+GKuO6WkVmsVfd4my6t0ZsaNCXw0Puec=
  - secure: YY7x9HaHKECos00AfC/pto+mZ5pUtviflMyhfURYGu3H0qyeO021MurwMRemCWGsS8cASonvSyD5eMq5xymRSon+AnCukP8nj9tZMK/kBlkx01OIW+mL2F95XYK4SaMg6jkabuw7I3GT33v7ZWmclIXseI58OlTO8LMqYwMIHeiv1p+mILpyqTDX1JFc9RCjGndlcqNQREBctIZxgR8K2ntTXuJ5IVzX5MtTiGMaK1OJbJDm3mbecJGkyh69AYb00zglDPW2d/3kvYrFjeC+8di4EQ6hN4tKzyaJ/uZHXEJ0PNKWefiovGyOV6GIU2kBC6wTJMboCK7rIFTGd1RuIAfRzckmo7vUB8AiigjizJPrXn47LAHwoh10KApPQTFx8LetFo+XW2uVOSpA4tUDKksiTQ7UOqk0KDqFKJogSQxljW0QWgV5LvLBoGJg2oLZ/y4kiKQ9NR97t9waxRr7OLpHVmd7luBJJHIuHlBSEUZPOfEZUXXh2JO8gRSK1Xks+DIiLzdXC+tu1GS0/nfpzXrzEnCSpz0vw/mH/yYcMzAguMua131hNg02MtzFm2ukXmcIK+IT18P1V75HrR1XX20tCAPwXimF79XDc2T/lvrwbv9IxkQUpwHcpeI6Wmz0DUSxuG3sQXMXhnc065Hd20Wmz2RqTq6c9fd75tNbZX0=
  - secure: tTf/ZLj45d75tNmtutijNIcayDVNkfTqzmrJUpat0661O9IrC5MqlnLnrT0SEyeD8KCCySmi+yecLvIhLgNPwXGOtHUxs0Il5m9CgT5yC5WJ/bhkwc9B7x69D7YWVxTIulgaCnqMYeIg+j3E+15dILJEGEbBZed/+29KKUGlVB/DFk6zCjC5SXL5u3Qgb/z/JArGxMurg/cytqgf1XJxL7dDzr/mC2ueYndRbQkiHfgshvkdK8Wy+RcBOP5/HOC82+i01FlNKKmLwcjRIs8YzKzYsX45+aIcs8/Onds5HA4go+sFj4NfWwr+aTcAiPiXYQQdUpsitT+lNAiASpzahbGGltGtP93YdZETcb8ppV+Ut8C8Y4PDAvkPyki5Vt07qtSzc6WxrtYxphRws8Yt/BziJIqeLOfBx93YvoEv0rxxsICRZ3FR510jLG8RGg/UtxdndN0uFL9X7F6CEuvnEymHE0KonfFG5e5nILse4rzk8DTzqbyWM0wvueQ9aFwyOoyKsU7r+m2oXNnzDdQfQJD+qQCwfzmlvfWblaoVVul07tdzFdatCECKpLcxsyUaNg7noN3/vq+FOwnuUX3k7RsKybJrZv7PG5iorsC090WVk51sySK1N9tnT/G6VugqZiIRjqD27c4J1+tWmAMby+ysyoLM6aobDOyxW4tzG1Q=
